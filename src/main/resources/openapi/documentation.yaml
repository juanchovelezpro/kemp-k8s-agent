openapi: "3.0.3"
info:
  title: "com_kemp_k8s_api API"
  description: "com_kemp_k8s_api API"
  version: "1.0.0"
servers:
- url: "https://com_kemp_k8s_api"
paths:
  /:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "Kubernetes API developed in Kotlin using the Official Kubernetes\
                    \ Java Client"
  /api/clusters:
    get:
      description: ""
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
    post:
      description: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: "#/components/schemas/KubeClientEntity"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            '*/*':
              schema:
                type: "string"
              examples:
                Example#1:
                  value: ""
            text/plain:
              schema:
                type: "string"
  /api/clusters/{cluster}:
    delete:
      description: ""
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        schema:
          type: "string"
  /api/clusters/{cluster}/{resource}/{resourceName}:
    delete:
      description: ""
      parameters:
      - name: "namespace"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "cluster"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "resource"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "resourceName"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            text/plain:
              schema:
                type: "object"
    get:
      description: ""
      parameters:
      - name: "namespace"
        in: "query"
        required: false
        schema:
          type: "string"
      - name: "resourceName"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "cluster"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "resource"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
            text/plain:
              schema:
                type: "string"
  /api/clusters/{cluster}/api-resources:
    get:
      description: ""
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
            text/plain:
              schema:
                type: "string"
  /api/clusters/{cluster}/resource:
    post:
      description: ""
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          text/plain:
            schema:
              type: "string"
        required: true
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "The resource was applied"
            text/plain:
              schema:
                type: "string"
        "400":
          description: "Bad Request"
          content:
            application/json:
              schema:
                type: "string"
              examples:
                Example#1:
                  value: "The resource could not be applied"
  /api/clusters/{cluster}/version:
    get:
      description: ""
      parameters:
      - name: "cluster"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                type: "string"
            text/plain:
              schema:
                type: "string"
components:
  schemas:
    KubeClientEntity:
      type: "object"
      properties:
        name:
          type: "string"
        authType:
          type: "string"
          enum:
          - "KUBECONFIG"
          - "TOKEN"
          - "SA"
          - "LOCAL"
        url:
          type: "string"
        token:
          type: "string"
        kubeConfig:
          type: "string"